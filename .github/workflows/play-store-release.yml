name: Build Signed APK for Play Store

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: 'Release notes for this version'
        required: false
        default: 'Bug fixes and improvements'

jobs:
  build-signed-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Decode Keystore
      env:
        ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo $ENCODED_KEYSTORE | base64 -d > CloudCounter/keystore/release.jks
        
    - name: Get current version
      id: get_version
      run: |
        cd CloudCounter
        VERSION_CODE=$(grep "versionCode" app/build.gradle.kts | awk '{print $3}')
        VERSION_NAME=$(grep "versionName" app/build.gradle.kts | awk '{print $3}' | tr -d '"')
        echo "current_version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "current_version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "Current version: $VERSION_NAME ($VERSION_CODE)"
        
    - name: Bump version
      id: bump_version
      run: |
        cd CloudCounter
        CURRENT_CODE=${{ steps.get_version.outputs.current_version_code }}
        CURRENT_NAME=${{ steps.get_version.outputs.current_version_name }}
        
        # Increment version code
        NEW_CODE=$((CURRENT_CODE + 1))
        
        # Increment version name based on input
        IFS='.' read -r -a version_parts <<< "$CURRENT_NAME"
        case "${{ github.event.inputs.version_type }}" in
          major)
            NEW_NAME="$((version_parts[0] + 1)).0.0"
            ;;
          minor)
            NEW_NAME="${version_parts[0]}.$((version_parts[1] + 1)).0"
            ;;
          patch)
            NEW_NAME="${version_parts[0]}.${version_parts[1]}.$((version_parts[2] + 1))"
            ;;
        esac
        
        # Update build.gradle.kts
        sed -i "s/versionCode = $CURRENT_CODE/versionCode = $NEW_CODE/" app/build.gradle.kts
        sed -i "s/versionName = \"$CURRENT_NAME\"/versionName = \"$NEW_NAME\"/" app/build.gradle.kts
        
        echo "new_version_code=$NEW_CODE" >> $GITHUB_OUTPUT
        echo "new_version_name=$NEW_NAME" >> $GITHUB_OUTPUT
        echo "Bumped version to: $NEW_NAME ($NEW_CODE)"
        
    - name: Build Signed Release APK
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        cd CloudCounter
        ./gradlew clean
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=keystore/release.jks \
          -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
          -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
          -Pandroid.injected.signing.key.password=$KEY_PASSWORD
          
    - name: Verify APK signature
      run: |
        cd CloudCounter
        APK_PATH="app/build/outputs/apk/release/app-release.apk"
        if [ -f "$APK_PATH" ]; then
          echo "APK found at: $APK_PATH"
          # Verify signature
          jarsigner -verify -verbose -certs "$APK_PATH" | head -50
          # Get SHA-1
          echo "APK SHA-1:"
          unzip -p "$APK_PATH" META-INF/CERT.RSA | keytool -printcert | grep SHA1
        else
          echo "APK not found!"
          find . -name "*.apk" -type f
          exit 1
        fi
        
    - name: Upload Signed APK
      uses: actions/upload-artifact@v4.3.3
      with:
        name: cloudcounter-release-v${{ steps.bump_version.outputs.new_version_name }}
        path: CloudCounter/app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump_version.outputs.new_version_name }}
        release_name: Release v${{ steps.bump_version.outputs.new_version_name }}
        body: |
          ## Release Notes
          ${{ github.event.inputs.release_notes }}
          
          ## Version Information
          - Version: ${{ steps.bump_version.outputs.new_version_name }}
          - Version Code: ${{ steps.bump_version.outputs.new_version_code }}
          
          ## Download
          The signed APK is attached to this release.
        draft: false
        prerelease: false
        
    - name: Upload APK to Firebase App Distribution
      continue-on-error: true
      run: |
        cd CloudCounter
        npm install -g firebase-tools
        
        if [ -n "${{ secrets.FIREBASE_TOKEN }}" ]; then
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
            --app 1:778271181918:android:2225b29f4fe7cea4d338cf \
            --release-notes "Production Release v${{ steps.bump_version.outputs.new_version_name }}: ${{ github.event.inputs.release_notes }}" \
            --testers "mcarthur.sp@gmail.com" \
            --token "${{ secrets.FIREBASE_TOKEN }}"
        fi
        
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CloudCounter/app/build.gradle.kts
        git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version_name }} (${{ steps.bump_version.outputs.new_version_code }})"
        git push