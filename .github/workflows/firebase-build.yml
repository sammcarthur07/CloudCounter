name: Firebase Cloud Build & Distribution

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      distribution_notes:
        description: 'Release Notes'
        required: false
        default: 'Cloud build from mobile workflow'

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: |
        cd CloudCounter
        chmod +x gradlew
        
    - name: Check project structure
      run: |
        ls -la
        ls -la CloudCounter/
        ls -la CloudCounter/app/
        
    - name: Build APK
      run: |
        cd CloudCounter
        ./gradlew clean
        if [ "${{ github.event.inputs.build_type }}" == "debug" ]; then
          ./gradlew assembleDebug --stacktrace
        else
          ./gradlew assembleRelease --stacktrace
        fi
        
    - name: List built APKs
      run: |
        find CloudCounter -name "*.apk" -type f
        
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: app-${{ github.event.inputs.build_type }}
        path: |
          CloudCounter/app/build/outputs/apk/**/*.apk
        if-no-files-found: warn
          
    - name: Upload APK to Firebase App Distribution (using gradle)
      run: |
        cd CloudCounter
        if [ "${{ github.event.inputs.build_type }}" == "debug" ]; then
          ./gradlew appDistributionUploadDebug --stacktrace
        else
          ./gradlew appDistributionUploadRelease --stacktrace
        fi
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      continue-on-error: true
      
    - name: Alternative Firebase Distribution
      if: failure()
      run: |
        cd CloudCounter
        
        # Install Firebase CLI
        npm install -g firebase-tools
        
        # Find the APK - check multiple possible locations
        APK_PATH=""
        if [ "${{ github.event.inputs.build_type }}" == "debug" ]; then
          # Check for debug APK in various locations
          for path in \
            "app/build/outputs/apk/debug/app-debug.apk" \
            "app/build/outputs/apk/debug/CloudCounter-debug.apk" \
            "app/build/outputs/apk/app-debug.apk"; do
            if [ -f "$path" ]; then
              APK_PATH="$path"
              break
            fi
          done
        else
          # Check for release APK in various locations  
          for path in \
            "app/build/outputs/apk/release/app-release.apk" \
            "app/build/outputs/apk/release/CloudCounter-release.apk" \
            "app/build/outputs/apk/app-release.apk"; do
            if [ -f "$path" ]; then
              APK_PATH="$path"
              break
            fi
          done
        fi
        
        # List all APK files for debugging
        echo "All APK files found:"
        find . -name "*.apk" -type f
        
        # Check if APK exists
        if [ -f "$APK_PATH" ]; then
          echo "Found APK at: $APK_PATH"
          ls -la "$APK_PATH"
          
          # Try distributing with token
          if [ -n "${{ secrets.FIREBASE_TOKEN }}" ]; then
            firebase appdistribution:distribute "$APK_PATH" \
              --app 1:778271181918:android:2225b29f4fe7cea4d338cf \
              --release-notes "${{ github.event.inputs.distribution_notes }}" \
              --testers "mcarthur.sp@gmail.com" \
              --token "${{ secrets.FIREBASE_TOKEN }}"
          else
            echo "FIREBASE_TOKEN not set, skipping Firebase distribution"
          fi
        else
          echo "APK not found at: $APK_PATH"
          exit 1
        fi